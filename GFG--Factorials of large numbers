class Solution {
public:
    vector<int> factorial(int n){
        vector<int> ans;
        ans.push_back(1);
        
        int carry = 0;
        
        for(int i=2; i<=n; i++){
            for(int j=0; j<ans.size(); j++){
                int x = ans[j] * i + carry;
                
                ans[j] = x % 10;
                carry = x / 10;
            }
            while(carry){
                ans.push_back(carry % 10);
                carry = carry / 10;
            }
        }
        reverse(ans.begin(),ans.end());
        
        return ans;
    }
};


















class Solution {
public:
    void multiply(vector<int>& nums, int &size, int &multiplier) {
        int carry = 0;
    
        for(int i = 0; i<size; i++) {
            int result = (multiplier*nums[i])+carry;
    
            nums[i]   = result%10;
    
            carry     = result/10;
        }
    
        while(carry) {
            nums[size] = carry%10;
            size++;
            carry /= 10;
        }
    }
    
    vector<int> factorial(int N){
        vector<int> nums(10000, 0);
        nums[0] = 1;
        int size = 1;
        int fact = N;
    
    
        for(int multiplier = 2; multiplier<=fact; multiplier++)
            multiply(nums, size, multiplier);
        
        vector<int> result;
        for(int i = size-1; i>=0 ; i--)
            result.push_back(nums[i]);
        return result;
    }
};
